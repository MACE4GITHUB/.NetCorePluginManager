@model DocumentationPlugin.Models.DocumentViewModel
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer
@{
    ViewData["Title"] = "Type";
}
<link rel="stylesheet" type="text/css" href="/css/documentation.css" />
<div class="container">
    <div class="row">
        <div class="col-lg-3">
            <div class="docContents">
                <h3>@Localizer[nameof(Languages.LanguageStrings.Contents)]</h3>
                @Html.Raw(Model.AllReferences)
            </div>
        </div>
        <div class="col-lg-7">
            <h2>@Model.Title</h2>
            @await Html.PartialAsync("_DocumentData.cshtml", Model)
        </div>
        <div class="col-lg-2">
            <div class="docReferences" id="divReferences">
                @if (Model.Contains != null)
                {
                    <h3>@Localizer[nameof(Languages.LanguageStrings.InThisDocument)]</h3>
                    <ul>
                        @foreach (KeyValuePair<string, string> kvp in Model.Contains)
                        {
                            @if (Model.TranslateStrings)
                            {
                                <li><a href="@kvp.Key">@Localizer[kvp.Value]</a></li>
                            }
                            else
                            {
                                <li><a href="@kvp.Key">@kvp.Value</a></li>
                            }
                        }
                    </ul>
                }
                @if (Model.SeeAlso != null)
                {
                    <h3>@Localizer[nameof(Languages.LanguageStrings.SeeAlso)]</h3>
                    <ul>
                        @foreach (var item in Model.SeeAlso)
                        {
                            <li>@Html.Raw($"<a href=\"{item.Key}\">{item.Value}</a>")</li>
                        }
                    </ul>
                }
            </div>
        </div>
    </div>
</div>


<script>
window.onscroll = function() {scrollFunc()};

var navbar = document.getElementById("divReferences");
var sticky = navbar.offsetTop;

function scrollFunc() {
  if (window.pageYOffset >= sticky) {
    navbar.classList.add("stickyRef")
  } else {
    navbar.classList.remove("stickyRef");
  }
}
</script>